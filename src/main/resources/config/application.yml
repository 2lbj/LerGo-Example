server:
  port: 8080

springdoc:
  swagger-ui:
    enabled: true

management:
  endpoints:
    web:
      exposure:
        include: '*'

logging:
  level:
    #org.springframework.boot.web.embedded.netty.NettyWebServer: INFO
    com.xxxxxx: DEBUG
    com.lergo.framework.filter.LogFilter: TRACE
    com.lergo.framework.filter.ResultFilter: DEBUG
    com.lergo.framework.filter.AuthRedisFilter: DEBUG
    com.lergo.framework.filter.AuthJWTFilter: DEBUG
############################################## 以上为调试配置，生产环境请删除 ##############################################
lergo:
  boot:
    with-jdbc: true
    with-redis: true
  filter:
    timer: true
    result: true
    #auth-jwt: true
    #auth-redis: true
    auth-expire-seconds: 30
    auth-header-name: Authorization
  jwt:
    app-key: lerGo-app-key
    app-secret: lerGo-app-secret
    leeway-seconds: 30
    refresh: true

spring:
  application:
    name: @application.name@
    artifactId: @project.artifactId@
    version: @project.version@
    description: @project.description@
  datasource:
    url: jdbc:postgresql://localhost/postgres?tringtype=unspecified
    username: postgres
    password: postgres

#  mvc:
#    pathmatch:
#      matching-strategy: ant_path_matcher
#  webflux.base-path: /api

# 自定义限流组件
resilience4j:
  ratelimiter:
    instances:
      xxxxRateLimiter:
        limitForPeriod: 1 # 周期允许的请求数量
        limitRefreshPeriod: 3000ms # 刷新周期
        timeoutDuration: 0ms # 超时时间

feign:
  demo-url: http://localhost:8080